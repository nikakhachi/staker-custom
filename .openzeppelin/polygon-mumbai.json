{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x22F68ab2f53e4eB0f8797Cd5050950c42Ab6ae4c",
      "txHash": "0x0f8e61ce758e6bc78d9992f38d5d335168181de71e0bf1177ae27daa97d884bd",
      "kind": "uups"
    }
  ],
  "impls": {
    "66d5e83f53f270bd1bd9d94a15389fd9db7c28fd48ca574a6c5d23034067e2e7": {
      "address": "0xAe2254F7C069c9b84393b36D78D49FDa6545E979",
      "txHash": "0xdb48cfa962c9f55218be6408e2a4c7dade8c838fc798ccfcd211265cfe925f94",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20Upgradeable)1618",
            "contract": "Staking",
            "src": "src/Staking.sol:31"
          },
          {
            "label": "staticInterestRate",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:33"
          },
          {
            "label": "dynamicRewardsRate",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:34"
          },
          {
            "label": "dynamicRewardsFinishAt",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:35"
          },
          {
            "label": "isStakingDynamic",
            "offset": 0,
            "slot": "355",
            "type": "t_bool",
            "contract": "Staking",
            "src": "src/Staking.sol:36"
          },
          {
            "label": "isAutoCompound",
            "offset": 1,
            "slot": "355",
            "type": "t_bool",
            "contract": "Staking",
            "src": "src/Staking.sol:37"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_struct(StakerInfo)3426_storage)",
            "contract": "Staking",
            "src": "src/Staking.sol:39"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:41"
          },
          {
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Staking",
            "src": "src/Staking.sol:44"
          },
          {
            "label": "rewardPerToken",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:45"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1618": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakerInfo)3426_storage)": {
            "label": "mapping(address => struct Staking.StakerInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakerInfo)3426_storage": {
            "label": "struct Staking.StakerInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ac9fa088589359718a9900da45eccce4625296420047c7204b6ae2d9b426679b": {
      "address": "0x29A645b06d6b8178ac29A2cc892Ce74335A2Bf93",
      "txHash": "0x8746f11a0713e5d29cca94d798efdd82613fa4a587c50d6b66f7859214514713",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20Upgradeable)1618",
            "contract": "Staking",
            "src": "src/Staking.sol:31"
          },
          {
            "label": "staticInterestRate",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:33"
          },
          {
            "label": "dynamicRewardsRate",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:34"
          },
          {
            "label": "dynamicRewardsFinishAt",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:35"
          },
          {
            "label": "isStakingDynamic",
            "offset": 0,
            "slot": "355",
            "type": "t_bool",
            "contract": "Staking",
            "src": "src/Staking.sol:36"
          },
          {
            "label": "isAutoCompound",
            "offset": 1,
            "slot": "355",
            "type": "t_bool",
            "contract": "Staking",
            "src": "src/Staking.sol:37"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_struct(StakerInfo)3426_storage)",
            "contract": "Staking",
            "src": "src/Staking.sol:39"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:41"
          },
          {
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Staking",
            "src": "src/Staking.sol:44"
          },
          {
            "label": "rewardPerToken",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:45"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "src/Staking.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1618": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakerInfo)3426_storage)": {
            "label": "mapping(address => struct Staking.StakerInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakerInfo)3426_storage": {
            "label": "struct Staking.StakerInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
